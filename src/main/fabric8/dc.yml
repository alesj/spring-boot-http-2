apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: ${project.artifactId}
  name: ${project.artifactId}
spec:
  replicas: 1
  selector:
    deploymentconfig: ${project.artifactId}
  template:
    metadata:
      labels:
        app: ${project.artifactId}
        deploymentconfig: ${project.artifactId}
    spec:
      containers:
      - name: ${project.artifactId}
        image: ${project.artifactId}
        env:
        - name: keystore_jks
          value: /var/run/secrets/java.io/keystores/keystore.jks
        - name: password
          value: changeit
        ports:
        - containerPort: 8443
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /var/run/secrets/java.io/keystores
          name: keystore-volume
      initContainers:
      - name: pem-to-keystore
        image: registry.access.redhat.com/redhat-sso-7/sso71-openshift:1.1-16
        env:
        - name: keyfile
          value: /var/run/secrets/openshift.io/services_serving_certs/tls.key
        - name: crtfile
          value: /var/run/secrets/openshift.io/services_serving_certs/tls.crt
        - name: keystore_pkcs12
          value: /var/run/secrets/java.io/keystores/keystore.pkcs12
        - name: keystore_jks
          value: /var/run/secrets/java.io/keystores/keystore.jks
        - name: password
          value: changeit
        command: ['/bin/bash']
        args: ['-c', "openssl pkcs12 -export -inkey $keyfile -in $crtfile -out $keystore_pkcs12 -password pass:$password && keytool -importkeystore -noprompt -srckeystore $keystore_pkcs12 -srcstoretype pkcs12 -destkeystore $keystore_jks -storepass $password -srcstorepass $password"]
        volumeMounts:
        - mountPath: /var/run/secrets/java.io/keystores
          name: keystore-volume
        - mountPath: /var/run/secrets/openshift.io/services_serving_certs
          name: service-certs
      volumes:
      - name: keystore-volume
        emptyDir: {}
      - name: service-certs
        secret:
          secretName: service-certs
